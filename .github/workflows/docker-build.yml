name: ci

on:
  push:
    branches: 
      - main
    tags:
      - 'v*'
  pull_request:
    branches: 
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      ## SET UP ENVIRONMENT ##

      - name: install just
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin

      - name: setup node with nvm
        uses: actions/setup-node@v4
        with:
          node-version-file: 'ui/.nvmrc'
          cache: 'npm'
          cache-dependency-path: 'ui/package-lock.json'

      - name: set up rust
        run: |
          rustup toolchain install stable --profile minimal
          rustup default stable
          rustup --version
          rustc --version
          cargo --version

      - name: install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features postgres

      ## BUILD ##

      - name: build with just
        run: just build-api

      ## PUBLISH ##

      - name: log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: extract metadata for docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
